{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","shift","setShift","totalLength","length","visibleLength","stepLength","className","style","width","transition","transform","map","image","i","src","alt","cn","disabled","type","onClick","prevShift","newShift","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","htmlFor","id","min","max","name","placeholder","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4166cef5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [shift, setShift] = useState<number>(0);\n\n  const totalLength = images.length * itemWidth;\n  const visibleLength = frameSize * itemWidth;\n  const stepLength = step * itemWidth;\n\n  const nextMove = () => {\n    setShift(prevShift => {\n      const newShift = prevShift + stepLength;\n\n      return newShift > (totalLength - visibleLength)\n        ? totalLength - visibleLength\n        : newShift;\n    });\n  };\n\n  const prevMove = () => {\n    setShift(prevShift => {\n      const newShift = prevShift - stepLength;\n\n      return newShift > 0\n        ? prevShift - stepLength\n        : 0;\n    });\n  };\n\n  return (\n    <div\n      className=\"Carousel container-outer\"\n      style={{ width: `${visibleLength}px` }}\n    >\n      <ul\n        className=\"Carousel__list container-inner\"\n        style={{\n          width: `${totalLength}px`,\n          transition: `transform, ${animationDuration}ms`,\n          transform: `translateX(${-shift}px)`,\n        }}\n      >\n        {images.map((image, i) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n          >\n            <img\n              className=\"Carousel__img\"\n              src={image}\n              alt={`${i + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"buttons\">\n        <button\n          className={cn(\n            'button',\n            'button--prev',\n            { disabled: shift === 0 },\n          )}\n          type=\"button\"\n          onClick={prevMove}\n          disabled={shift === 0}\n        >\n          ðŸ¡„ Prev\n        </button>\n\n        <button\n          className={cn(\n            'button',\n            'button--next',\n            { disabled: shift === (totalLength - visibleLength) },\n          )}\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={nextMove}\n          disabled={shift === (totalLength - visibleLength)}\n        >\n          Next ðŸ¡†\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const { images } = state;\n\n  const [step, setStep] = useState<number>(3);\n  const [frameSize, setFrameSize] = useState<number>(3);\n  const [itemWidth, setItemWidth] = useState<number>(130);\n  const [animationDuration, setAnimationDuration] = useState<number>(1000);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n      />\n\n      <div className=\"inputs\">\n        <label htmlFor=\"stepId\">Enter number of steps here &darr;</label>\n        <input\n          id=\"stepId\"\n          className=\"input\"\n          type=\"number\"\n          step={1}\n          min={1}\n          max={images.length}\n          name=\"step\"\n          placeholder=\"Step\"\n          onChange={(event) => setStep(+event.target.value)}\n        />\n\n        <label htmlFor=\"frameId\">Enter frame size here &darr;</label>\n        <input\n          id=\"frameId\"\n          className=\"input\"\n          type=\"number\"\n          step={1}\n          min={1}\n          max={images.length}\n          name=\"frameSize\"\n          placeholder=\"Frame Size\"\n          onChange={(event) => setFrameSize(+event.target.value)}\n        />\n\n        <label htmlFor=\"itemId\">Enter item width here &darr;</label>\n        <input\n          id=\"itemId\"\n          className=\"input\"\n          type=\"number\"\n          step={10}\n          min={50}\n          max={1300}\n          name=\"itemWidth\"\n          placeholder=\"Item Width\"\n          onChange={(event) => setItemWidth(+event.target.value)}\n        />\n\n        <label htmlFor=\"animationDurationId\">\n          Enter animation duration here &darr;\n        </label>\n        <input\n          id=\"animationDurationId\"\n          className=\"input\"\n          type=\"number\"\n          step={100}\n          min={0}\n          max={10000}\n          name=\"animationDuration\"\n          placeholder=\"Animation Duration\"\n          onChange={(event) => setAnimationDuration(+event.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}